# Stage 1: Build dependencies

FROM python:3.12-slim AS builder

WORKDIR /app

COPY pyproject.toml ./
COPY . .

# RUN curl -sSL https://install.python-poetry.org | python3 -

RUN pip install poetry
RUN poetry config virtualenvs.create false

RUN poetry install --no-dev

# Stage 2: Production image

FROM python:3.12-slim

WORKDIR /app

COPY --from=builder /app/lib/python3.12/site=packages .

COPY . .

# ENTRYPOINT [ "python" , "main.py"]

# CMD ["poetry", "run", "python", "main.py"]
CMD ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0","--port","8000", "--reload"]



# # Stage 1: Install dependencies (can be a larger image)
# FROM python:3.9-slim AS prod
# WORKDIR /app
# COPY pyproject.toml ./
# RUN curl -sSL https://install.python-poetry.org | python3 -
# # RUN poetry install --no-dev

# # Stage 2: Copy application code and create a minimal image
# FROM python:3.9-slim
# WORKDIR /app
# COPY --from=build . .
# # CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
# ENTRYPOINT [ "python" , "main.py"]
